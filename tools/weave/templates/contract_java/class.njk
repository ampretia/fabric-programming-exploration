{% macro schema(s) %}
{% if s.type %}
   {{s.type  }}
{% else %} 
   {{s.$ref | objectname }}
{% endif %}
{% endmacro %}

{% macro parameters(params) %}
{% for p in params -%} {{p.name}}:{{- schema(p.schema) -}}
    {%- if not loop.last -%}, {% endif -%}
{%- endfor %}
{% endmacro %}

{% macro arglist(params) %}
{% if params %}
{% for p in params -%} JSON.stringify({{p.name}})
    {%- if not loop.last -%}, {% endif -%}
{%- endfor %}
{%- endif %}
{% endmacro %}

import { Contract, Info, Returns, Transaction } from 'fabric-contract-api';
import {  {% for name,comp in components.schemas %}{{ name }} {%- if not loop.last -%}, {% endif -%} {% endfor %} } from 'domain-adts';

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@Info({ title: '', description: ''})
export default class {{ contract.name | replace(".","_") }} extends Contract {

    public constructor() {
        super();
    }

    {% for tx in contract.transactions %}
    @Transaction()
    @Returns({{ schema(tx.return[0].schema) | trim }})
    public async {{tx.name}}(ctx: Context, {{- parameters(tx.parameters) | trim  -}}): Promise<{{ schema(tx.return[0].schema) | trim }}>{
        // Please could you enter something here...
        return;
    }
    {% endfor %}

}

